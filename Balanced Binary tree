// Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    
    TreeNode() {}
    
    TreeNode(int val) {
        this.val = val;
    }
    
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution {
    
    public boolean isBalanced(TreeNode root) {
        return checkHeight(root) != -1;
    }

    // Helper method that returns height if balanced, -1 if not
    private int checkHeight(TreeNode node) {
        if (node == null) return 0;
        
        int left = checkHeight(node.left);
        if (left == -1) return -1;  // Left subtree not balanced
        
        int right = checkHeight(node.right);
        if (right == -1) return -1;  // Right subtree not balanced
        
        if (Math.abs(left - right) > 1) return -1;  // Current node not balanced
        
        return Math.max(left, right) + 1;  // Return height
    }
}
